@page "/health-dashboard"
@using Radzen
@using Radzen.Blazor
@inject HealthDashboardService HealthDashboardService

<h1 style="font-size: 24px; font-weight: 600; margin: -40px 0 10px 0; color: #46d444;">
    Health Dashboard
</h1>

@if (services == null)
{
    <p><em>Loading...</em></p>
}
else
{

<RadzenDataGrid Data="@services" TItem="HealthDashboardService.HealthDashboard"
                AllowPaging="false" AllowFiltering="false" AllowSorting="false">
    <Columns>
        <RadzenDataGridColumn TItem="HealthDashboardService.HealthDashboard" Property="Service" Title="Service" />
        <RadzenDataGridColumn TItem="HealthDashboardService.HealthDashboard" Property="Status" Title="Status">
            <Template Context="data">
                <span style="color:@GetStatusColor(data.Status); font-weight:bold">
                    @data.Status
                </span>
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="HealthDashboardService.HealthDashboard" Property="Details" Title="Details" />
    </Columns>
</RadzenDataGrid>
}

@code {
    private List<HealthDashboardService.HealthDashboard>? services;

    protected override async Task OnInitializedAsync()
    {
        services = (await HealthDashboardService.GetHealthDashboardsAsync())
        .OrderBy(s => s.Service)
        .ToList();
    }

    private string GetStatusColor(string status) => status switch
    {
        "OK" => "green",
        "Warning" => "orange",
        "Error" => "red",
        _ => "gray"
    };
}
